name: Continuous Integration

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
  workflow_dispatch:

# Cancel in-progress runs for the same PR/branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: write
  checks: write

env:
  NODE_VERSION: "20"
  CI: true

jobs:
  # Quick validation for fast feedback
  validate:
    name: Quick Validation
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      should-run-full: ${{ steps.changes.outputs.should-run }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Check for relevant changes
        id: changes
        run: |
          if git diff --name-only HEAD~1 HEAD | grep -E '\.(ts|tsx|js|jsx|json)$|package\.json|package-lock\.json'; then
            echo "should-run=true" >> $GITHUB_OUTPUT
            echo "📝 Code changes detected - running full pipeline"
          else
            echo "should-run=false" >> $GITHUB_OUTPUT
            echo "📄 Only documentation changes - skipping full pipeline"
          fi

      - name: Setup Node.js (if needed)
        if: steps.changes.outputs.should-run == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Quick install check
        if: steps.changes.outputs.should-run == 'true'
        run: |
          echo "🔍 Validating package.json and lock file..."
          npm ci --dry-run

  # Core testing pipeline
  test:
    name: Test & Build
    runs-on: ubuntu-latest
    needs: validate
    if: needs.validate.outputs.should-run == 'true'
    timeout-minutes: 15
    strategy:
      matrix:
        node-version: ["20"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install dependencies
        run: |
          echo "::group::Installing dependencies"
          npm ci --prefer-offline --no-audit
          echo "::endgroup::"

      - name: Type checking
        run: |
          echo "::group::TypeScript Type Check"
          npm run type-check
          echo "::endgroup::"

      - name: Lint check
        run: |
          echo "::group::ESLint Check"
          npm run lint
          echo "::endgroup::"

      - name: Unit tests
        run: |
          echo "::group::Unit Tests"
          npm run test -- --run --reporter=verbose
          echo "::endgroup::"

      - name: Build verification
        run: |
          echo "::group::Production Build"
          npm run build
          echo "✅ Build completed successfully"
          echo "📦 Build artifacts:"
          find dist -type f -name "*.js" -o -name "*.css" -o -name "*.html" | head -10
          echo "::endgroup::"

      - name: Build artifact analysis
        run: |
          echo "::group::Build Analysis"
          
          if [ -d "dist" ]; then
            echo "📊 Build size analysis:"
            du -sh dist/
            
            if [ -d "dist/assets" ]; then
              echo "🎯 Asset breakdown:"
              find dist/assets -name "*.js" -exec ls -lh {} \; | awk '{print $5 "\t" $9}' | sort -hr | head -5
              
              echo "📋 File count by type:"
              echo "JavaScript files: $(find dist/assets -name "*.js" | wc -l)"
              echo "CSS files: $(find dist/assets -name "*.css" | wc -l)"
              echo "Image files: $(find dist -name "*.png" -o -name "*.jpg" -o -name "*.svg" | wc -l)"
            fi
          else
            echo "❌ No build artifacts found"
            exit 1
          fi
          
          echo "::endgroup::"

      - name: Cache build artifacts for other workflows
        uses: actions/cache@v4
        with:
          path: |
            dist/
            node_modules/
          key: build-${{ github.sha }}-${{ matrix.node-version }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-node-${{ matrix.node-version }}
          path: |
            dist/
            package.json
            package-lock.json
          retention-days: 7

  # Notification job for successful CI
  notify-success:
    name: Success Notification
    runs-on: ubuntu-latest
    needs: [validate, test]
    if: always() && (needs.validate.outputs.should-run != 'true' || needs.test.result == 'success')
    steps:
      - name: Success message
        run: |
          if [ "${{ needs.validate.outputs.should-run }}" != "true" ]; then
            echo "✅ CI skipped - only documentation changes detected"
          else
            echo "✅ CI pipeline completed successfully"
            echo "🔍 All quality checks passed"
            echo "🧪 Tests executed successfully"
            echo "🏗️ Build completed without errors"
          fi

  # Notification job for failed CI
  notify-failure:
    name: Failure Notification
    runs-on: ubuntu-latest
    needs: [validate, test]
    if: always() && needs.test.result == 'failure'
    steps:
      - name: Failure analysis
        run: |
          echo "❌ CI pipeline failed"
          echo ""
          echo "🔍 Validation: ${{ needs.validate.result }}"
          echo "🧪 Tests: ${{ needs.test.result }}"
          echo ""
          echo "Please check the logs above for specific error details."
          echo "Common issues:"
          echo "  • TypeScript compilation errors"
          echo "  • ESLint rule violations"
          echo "  • Failing unit tests"
          echo "  • Build configuration problems"
          echo ""
          echo "💡 Tips:"
          echo "  • Run 'npm run type-check' locally to check TypeScript"
          echo "  • Run 'npm run lint' to check code style"
          echo "  • Run 'npm run test' to execute tests"
          echo "  • Run 'npm run build' to verify build works"