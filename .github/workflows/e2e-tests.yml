name: E2E Tests

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
  schedule:
    # Run E2E tests daily at 2 AM UTC
    - cron: '0 2 * * *'

permissions:
  contents: read
  pull-requests: write
  checks: write

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox, webkit]
    name: E2E Tests (${{ matrix.browser }})
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install ${{ matrix.browser }} --with-deps

      - name: Build project
        run: npm run build

      - name: Start preview server
        run: npm run preview &
        env:
          PORT: 4173

      - name: Wait for server to start
        run: npx wait-on http://localhost:4173 --timeout 30000

      - name: Run E2E tests
        run: npx playwright test --project=${{ matrix.browser }}
        env:
          CI: true

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: e2e-results-${{ matrix.browser }}
          path: |
            test-results/
            playwright-report/

  mobile-e2e-tests:
    runs-on: ubuntu-latest
    name: Mobile E2E Tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install chromium --with-deps

      - name: Build project
        run: npm run build

      - name: Start preview server
        run: npm run preview &
        env:
          PORT: 4173

      - name: Wait for server to start
        run: npx wait-on http://localhost:4173 --timeout 30000

      - name: Run mobile E2E tests
        run: npx playwright test --project=mobile-chrome --project=mobile-safari
        env:
          CI: true

      - name: Upload mobile test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: mobile-e2e-results
          path: |
            test-results/
            playwright-report/

  e2e-summary:
    runs-on: ubuntu-latest
    name: E2E Test Summary
    needs: [e2e-tests, mobile-e2e-tests]
    if: always()
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all test results
        uses: actions/download-artifact@v4
        with:
          pattern: "*e2e-results*"
          path: test-results/

      - name: Merge Playwright reports
        run: |
          npx playwright merge-reports --reporter html test-results/*/playwright-report || true
          npx playwright merge-reports --reporter json test-results/*/playwright-report > merged-report.json || true

      - name: Upload merged results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: merged-e2e-results
          path: |
            playwright-report/
            merged-report.json

      - name: Comment PR with E2E results
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request' && always()
        with:
          script: |
            const fs = require('fs');
            let comment = '## 🧪 E2E Test Results\n\n';
            
            try {
              if (fs.existsSync('merged-report.json')) {
                const report = JSON.parse(fs.readFileSync('merged-report.json', 'utf8'));
                const stats = report.stats || {};
                
                comment += `- ✅ **Passed**: ${stats.expected || 0}\n`;
                comment += `- ❌ **Failed**: ${stats.unexpected || 0}\n`;
                comment += `- ⏭️ **Skipped**: ${stats.skipped || 0}\n`;
                comment += `- ⏱️ **Duration**: ${Math.round((stats.duration || 0) / 1000)}s\n\n`;
                
                if (stats.unexpected > 0) {
                  comment += '⚠️ Some E2E tests failed. Please check the detailed results.';
                } else {
                  comment += '🎉 All E2E tests passed!';
                }
              } else {
                comment += '📊 E2E test results not available.';
              }
            } catch (error) {
              comment += '❌ Error reading E2E test results.';
            }
            
            // Find existing comment to update
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const existingComment = comments.data.find(
              comment => comment.body.includes('🧪 E2E Test Results')
            );
            
            if (existingComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existingComment.id,
                body: comment
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: comment
              });
            }